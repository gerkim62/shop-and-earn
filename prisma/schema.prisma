generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                           Int                   @id @default(autoincrement())
  email                        String                @unique
  fullName                     String
  password                     String
  referralCode                 Int                   @unique @default(autoincrement())
  notifications                Notification[]
  referredBy                   User?                 @relation("ReferredUsers", fields: [referredById], references: [id])
  referredById                 Int?
  referredUsers                User[]                @relation("ReferredUsers")
  balance                      Float                 @default(0)
  orders                       Order[]
  cart                         Cart?
  role                         Role                  @default(USER)
  createdAt                    DateTime              @default(now())
  updatedAt                    DateTime              @updatedAt
  referralTransactionsReferrer ReferralTransaction[] @relation("ReferrerTransactions")
  referralTransactionsReferred ReferralTransaction[] @relation("ReferredTransactions")
}

model Notification {
  id        Int             @id @default(autoincrement())
  user      User            @relation(fields: [userId], references: [id])
  userId    Int
  title     String
  message   String
  type      NotficationType
  read      Boolean         @default(false)
  createdAt DateTime        @default(now())
  updatedAt DateTime        @updatedAt
}

model Cart {
  id        Int        @id @default(autoincrement())
  user      User       @relation(fields: [userId], references: [id])
  userId    Int        @unique
  items     CartItem[]
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

model Product {
  id           Int         @id @default(autoincrement())
  name         String
  description  String
  price        Float
  stock        Int         @default(0)
  images       String[]
  orders       OrderItem[]
  cartItems    CartItem[]
  manufacturer String
  createdAt    DateTime    @default(now())
  updatedAt    DateTime    @updatedAt
}

model Order {
  id          Int         @id @default(autoincrement())
  user        User        @relation(fields: [userId], references: [id])
  userId      Int
  items       OrderItem[]
  totalAmount Float
  status      OrderStatus
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
}

model OrderItem {
  id        Int     @id @default(autoincrement())
  order     Order   @relation(fields: [orderId], references: [id])
  orderId   Int
  product   Product @relation(fields: [productId], references: [id])
  productId Int
  quantity  Int
  price     Float
}

model CartItem {
  id        Int      @id @default(autoincrement())
  cart      Cart     @relation(fields: [cartId], references: [id])
  cartId    Int
  product   Product  @relation(fields: [productId], references: [id])
  productId Int
  quantity  Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([cartId, productId])
}

model ReferralTransaction {
  id         Int                     @id @default(autoincrement())
  referrer   User                    @relation("ReferrerTransactions", fields: [referrerId], references: [id])
  referrerId Int
  referred   User                    @relation("ReferredTransactions", fields: [referredId], references: [id])
  referredId Int
  amount     Float
  type       ReferralTransactionType
  createdAt  DateTime                @default(now())
}

enum Role {
  USER
  ADMIN
}

enum OrderStatus {
  PENDING
  PROCESSING
  SHIPPED
  DELIVERED
}

enum ReferralTransactionType {
  SIGNUP
  FIRST_PURCHASE
}

enum NotficationType {
  reward
  purchase
}
